apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

apply from: '../config/android-common.gradle'

group = GROUP
version = rootProject.versionName

project.archivesBaseName = 'appauth'

android.testOptions {
    unitTests.includeAndroidResources = true
}

dependencies {
    api "androidx.browser:browser:${project.androidXVersions.browser}"
    implementation "androidx.annotation:annotation:${project.androidXVersions.annotation}"
    implementation "androidx.appcompat:appcompat:${project.androidXVersions.appCompat}"
    apply from: '../config/testdeps.gradle', to:it
}

apply from: '../config/style.gradle'
apply from: '../config/coverage.gradle'
apply from: '../config/javadoc.gradle'

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        release(MavenPublication) {
            groupId GROUP
            artifactId POM_ARTIFACT_ID
            version rootProject.versionName

            artifact("$buildDir/outputs/aar/${project.archivesBaseName}-release.aar")
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = POM_NAME
                description = POM_DESCRIPTION
                packaging = POM_PACKAGING
                url = POM_URL
                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                        distribution = POM_LICENCE_DIST
                    }
                }
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        url = POM_DEVELOPER_URL
                    }
                }
                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                }
                // A slightly hacky fix so that the POM will include transitive dependencies
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username project.hasProperty('ossrhUsername') ? ossrhUsername : ''
                password project.hasProperty('ossrhPassword') ? ossrhPassword : ''
            }
        }
    }
}

signing {
    required { hasProperty('signing.keyId') }
    sign publishing.publications
}
